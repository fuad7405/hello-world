<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.fuadhasan</groupId>
    <artifactId>hello-world-maven</artifactId>
    <version>0.0.1.25</version>
    <packaging>jar</packaging>

    <name>Spring Boot Hello World with Maven</name>
    <description>Spring Boot Hello World with Maven</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <springdoc.version>2.8.4</springdoc.version>
        <yguard.version>4.1.0</yguard.version>

        <mainclass>com.fuadhasan.helloworld.HelloWorldApplication</mainclass>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--
			  obfuscate BOOT-INF/classes:
			  1. backup original project jar / project build artefact
			  2. extract BOOT-INF/classes to separate jar and strip away the
			     "BOOT-INF/classes" path prefix in the new jar
			  3. obfuscate extracted classes from the new jar
			  4. merge original project jar / project build artefact with obfuscated
			     classes
			  -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <dependencies>
                    <dependency>
                        <groupId>com.yworks</groupId>
                        <artifactId>yguard</artifactId>
                        <version>${yguard.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <id>obfuscate</id>
                        <configuration>
                            <tasks>
                                <property
                                        name="project.build.prefix"
                                        value="${project.build.directory}/${project.build.finalName}"/>
                                <property
                                        name="project.jar"
                                        value="${project.build.prefix}.jar"/>

                                <!--
                                  check if the project jar / project build artefact already
                                  exists
                                  -->
                                <available
                                        file="${project.jar}"
                                        property="project.jar.exists"/>
                                <fail unless="project.jar.exists">${project.jar} does not exist.</fail>

                                <!-- backup the project jar -->
                                <property
                                        name="project.jar.unobf"
                                        value="${project.build.prefix}_unobf.jar"/>
                                <move
                                        file="${project.jar}"
                                        tofile="${project.jar.unobf}"
                                        verbose="true"/>

                                <!-- extract the application classes for obfuscation -->
                                <property
                                        name="project.classes.unobf"
                                        value="${project.build.prefix}_classes_unobf.jar"/>
                                <jar destfile="${project.classes.unobf}">
                                    <mappedresources>
                                        <zipfileset src="${project.jar.unobf}">
                                            <include name="BOOT-INF/classes/**"/>
                                        </zipfileset>
                                        <mapper
                                                type="glob"
                                                from="BOOT-INF/classes/*"
                                                to="*"/>
                                    </mappedresources>
                                </jar>

                                <!-- obfuscate the application classes -->
                                <property
                                        name="runtime.classpath"
                                        refid="maven.runtime.classpath"/>
                                <property
                                        name="project.classes.obf"
                                        value="${project.build.prefix}_classes_obf.jar"/>
                                <taskdef
                                        name="yguard"
                                        classname="com.yworks.yguard.YGuardTask"
                                        classpathref="maven.test.classpath"/>
                                <yguard>
                                    <inoutpair
                                            in="${project.classes.unobf}"
                                            out="${project.classes.obf}"/>

                                    <externalclasses>
                                        <pathelement path="${runtime.classpath}"/>
                                    </externalclasses>

                                    <rename
                                            mainclass="${mainclass}"
                                            logfile="${project.build.directory}/${project.build.finalName}_renamelog.xml">
                                        <keep linenumbertable="keep">
                                            <linenumbertable>
                                                <property name="mapping-scheme" value="scramble"/>
                                                <property name="scrambling-salt" value="100"/>
                                                <patternset>
                                                    <include name="com.fuadhasan.**"/>
                                                </patternset>
                                            </linenumbertable>
                                            <method name="void main(java.lang.String[])" class="${mainclass}"/>
                                            <class methods="friendly" fields="friendly">
                                                <patternset>
                                                    <include name="com.fuadhasan.helloworld."/>
                                                    <exclude name="com.fuadhasan.helloworld.configuration."/>
                                                    <exclude name="com.fuadhasan.helloworld.controller."/>
                                                </patternset>
                                            </class>
                                        </keep>
                                    </rename>
                                </yguard>

                                <!--
                                  recreate the project jar / project build artefact
                                  use the zip task for easy copying of the manifest file from
                                  the original project jar / project build artefact
                                  -->
                                <zip
                                        compress="false"
                                        destfile="${project.jar}">
                                    <zipfileset src="${project.jar.unobf}">
                                        <include name="**"/>
                                        <exclude name="BOOT-INF/classes/**"/>
                                    </zipfileset>
                                    <zipfileset
                                            src="${project.classes.obf}"
                                            prefix="BOOT-INF/classes">
                                        <include name="**"/>
                                        <exclude name="META-INF/**"/>
                                    </zipfileset>
                                </zip>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
